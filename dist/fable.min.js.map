{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","fable.min.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Browser.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","source/Fable.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","libFableUUID","[object Object]","pLogStreamSettings","pFableLog","this","_Settings","loggerUUID","getUUID","pLogText","pLogObject","write","pLogLevel","fable-uuid","2","getDefaultProviders","tmpDefaultProviders","console","./Fable-Log-Logger-Console.js","3","loggertype","streamtype","level","4","libBaseLogger","super","_ShowTimeStamps","hasOwnProperty","ShowTimeStamps","_FormattedTimeStamps","FormattedTimeStamps","_ContextMessage","Context","Product","pLevel","pObject","tmpDate","Date","toISOString","log","JSON","stringify","./Fable-Log-BaseLogger.js","5","FableLog","pFableSettings","pFable","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","uuid","pLogger","push","pMessage","pDatum","trace","debug","info","warn","error","fatal","tmpStreamDefinition","Object","assign","addLogger","initialize","tmpMessage","tmpTime","pTimeStamp","pTimeDelta","tmpEndTime","tmpMs","parseInt","tmpSeconds","tmpMinutes","tmpHours","pStartTime","logTimeDelta","getTimeDelta","logTimeDeltaHuman","new","pSettings","./Fable-Log-DefaultProviders.js","./Fable-Log-DefaultStreams.json","6","ProductVersion","ConfigFile","7","FableSettings","default","buildDefaultSettings","merge","base","parse","DefaultConfigFile","pException","settings","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","./Fable-Settings-Default","8","getRandomValues","crypto","bind","window","msCrypto","tmpBuffer","Uint8Array","tmpValue","Math","random","generateWhatWGBytes","generateRandomBytes","9","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","toString","substr","pBuffer","join","Array","tmpRandomBytes","generate","bytesToUUID","tmpUUID","charAt","floor","generateRandom","generateUUIDv4","./Fable-UUID-Random.js","10","libFableSettings","libFableLog","Fable","settingsManager","libUUID","fable","fable-log","fable-settings"],"mappings":"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","file":"fable.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n* Base Logger Class\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableUUID = new (require('fable-uuid').FableUUID)();\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = pLogStreamSettings;\n\t\t\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\tthis.loggerUUID = libFableUUID.getUUID();\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n",null,"/**\n* Default Logger Provider Function --- Browser\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\ngetDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings)\n\n\t\tthis._ShowTimeStamps = pLogStreamSettings.hasOwnProperty('ShowTimeStamps') ? (pLogStreamSettings.ShowTimeStamps == true) : false;\n\t\tthis._FormattedTimeStamps = pLogStreamSettings.hasOwnProperty('FormattedTimeStamps') ? (pLogStreamSettings.FormattedTimeStamps == true) : false;\n\n\t\tthis._ContextMessage = pLogStreamSettings.hasOwnProperty('Context') ? ` (${pLogStreamSettings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? ` (${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'';\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\tlet tmpDate = (new Date()).toISOString();\n\t\t\tconsole.log(`${tmpDate} [${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\tlet tmpDate = +new Date();\n\t\t\tconsole.log(`${tmpDate} [${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(`[${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n}\n\nmodule.exports = ConsoleLogger;","/**\n* Fable Logging Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Logger\n*/\n\n/**\n* Fable Solution Log Wrapper Main Class\n*\n* @class FableLog\n* @constructor\n*/\nclass FableLog\n{\n\tconstructor(pFableSettings, pFable)\n\t{\n\t\tlet tmpSettings = (typeof(pFableSettings) === 'object') ? pFableSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, pDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, pDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, pDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, pDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, pDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, pDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'console',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp \n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = {new:autoConstruct, FableLog:FableLog};\n","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\n/**\n* Fable Solution Settings\n*\n* @class FableSettings\n* @constructor\n*/\n\nclass FableSettings\n{\n\tconstructor(pFableSettings)\n\t{\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pFableSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')))\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\ttmpSettingsTo = Object.assign(tmpSettingsTo, tmpSettingsFrom);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\tthis.settings = Object.assign(tmpSettingsFrom, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = {new:autoConstruct, FableSettings:FableSettings};\n","/**\n* Random Byte Generator - Browser version\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t//\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable UUID\n*/\n\n/**\n* Fable Solution UUID Generation Main Class\n*\n* @class FableUUID\n* @constructor\n*/\n\nvar libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = {new:autoConstruct, FableUUID:FableUUID};\n","// ##### Part of the **[retold](https://stevenvelozo.github.io/retold/)** system\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libFableSettings = require('fable-settings').FableSettings;\nconst libFableUUID = require('fable-uuid').FableUUID;\nconst libFableLog = require('fable-log').FableLog;\n\n\n/**\n* Fable Application Services Support Library\n*\n* @class Fable\n*/\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\tlet tmpSettings = new libFableSettings(pSettings);\n\n\t\tthis.settingsManager = tmpSettings;\n\n\t\t// Instantiate the UUID generator\n\t\tthis.libUUID = new libFableUUID(tmpSettings);\n\n\t\tthis.log = new libFableLog(tmpSettings);\n\t\tthis.log.initialize();\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.settingsManager.settings;\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this.libUUID.getUUID();\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = {new:autoConstruct, Fable:Fable};"]}